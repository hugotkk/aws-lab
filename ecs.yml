---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  ECS

Parameters:
  AppName:
    Default: "apache-php"
    Type: String

Resources:
# __      _______   _____ 
# \ \    / /  __ \ / ____|
#  \ \  / /| |__) | |     
#   \ \/ / |  ___/| |     
#    \  /  | |    | |____ 
#     \/   |_|     \_____|
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  myInternetGateway:
    Type: AWS::EC2::InternetGateway

  # Required
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: myVPC
      InternetGatewayId:
         Ref: myInternetGateway

  mySubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
  mySubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
  myRoute:
    Type: AWS::EC2::Route
    DependsOn: myInternetGateway
    Properties:
       RouteTableId:
         Ref: myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway
  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myRouteTable
      SubnetId: !Ref mySubnetA
  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myRouteTable
      SubnetId: !Ref mySubnetB
  mySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow all traffic
        VpcId:
           Ref: myVPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
#   ______ _      ____  
# |  ____| |    |  _ \ 
# | |__  | |    | |_) |
# |  __| | |    |  _ < 
# | |____| |____| |_) |
# |______|______|____/ 
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Name: ECS-Balancer
      Scheme: internet-facing
      SecurityGroups:
        - !Ref mySecurityGroup
      SubnetMappings:
        - SubnetId: !Ref mySubnetA
        - SubnetId: !Ref mySubnetB
      Type: application
  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 8080
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      Name: MyTargets
      TargetType: ip
      # Required
      Protocol: HTTP
      Port: 8080
      VpcId: !Ref myVPC
# ______ _____  _____ 
# |  ____/ ____|/ ____|
# | |__ | |    | (___  
# |  __|| |     \___ \ 
# | |___| |____ ____) |
# |______\_____|_____/ 
  ECSCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: "ecs"
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
  ECSService:
    Type: AWS::ECS::Service
    DependsOn:
    - ECSCluster
    - LoadBalancer
    Properties:

      # Required in fargate
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !Ref mySecurityGroup
          Subnets:
          - !Ref mySubnetA
          - !Ref mySubnetB

      Cluster:
        Ref: "ECSCluster"
      TaskDefinition:
        Ref: "ECSTaskDefinition"
      DesiredCount: 2
      LaunchType: FARGATE
      LoadBalancers:
      - ContainerName: !Ref AppName
        ContainerPort: 80
        TargetGroupArn: !Ref TargetGroup
  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:

      # Required in fargate
      RequiresCompatibilities:
      - FARGATE
      Cpu: 256
      Memory: 512

      ContainerDefinitions:
      - Name: !Ref AppName
        Cpu: 256
        Memory: 512
        Image: "hugotse/php-test:latest"
        PortMappings:
          - ContainerPort: 80
      NetworkMode: awsvpc
