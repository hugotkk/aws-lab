AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  NumberOfInstance:
    Default: 1
    Description: Number of instance
    Type: Number
  InstanceType:
    Default: t2.micro
    Description: Instance Type
    Type: String
  ImageId:
    Default: ami-0fb653ca2d3203ac1
    Description: AMI
    Type: AWS::EC2::Image::Id
  DiskSize:
    Default: 20
    Description: Disk Size
    Type: String
  KeyName:
    Default: hugotse
    Description: Private key
    Type: AWS::EC2::KeyPair::KeyName
  MyIp:
    Description: My IP Address
    Type: String
Resources:
  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: 'true'
    Properties:
      AvailabilityZones:
      - us-east-2a
      - us-east-2b
      MinSize: !Ref NumberOfInstance
      MaxSize: !Ref NumberOfInstance
      DesiredCapacity: !Ref NumberOfInstance
      LaunchTemplate:
        LaunchTemplateId: !Ref myTemplate
        Version: !GetAtt myTemplate.LatestVersionNumber
  IamRole:
    Type: "AWS::IAM::Role"
    Properties:
      Description: "EC2 IAM role for SSM access and SAM deployment"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
  Ec2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: "IamRole"
  myTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt Ec2InstanceProfile.Arn
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
        - !GetAtt Ec2SecurityGroup.GroupId
        BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref DiskSize
        InstanceMarketOptions:
          MarketType: spot
    DependsOn: Ec2SecurityGroup
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow connections
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: !Sub '${MyIp}/32'
